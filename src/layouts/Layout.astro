---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Personal website showcasing web development projects" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <header>
      <nav aria-label="Main navigation">
        <div class="nav-container">
          <a href="/" class="logo" aria-label="Home">Braden's World</a>
          
          <button 
            class="mobile-menu-toggle" 
            aria-label="Toggle navigation menu"
            aria-expanded="false"
            aria-controls="mobile-nav"
            type="button"
          >
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
          </button>
          <ul class="nav-links" role="list" id="mobile-nav">
            <li><a href="/" aria-current="page">Home</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="/projects">Projects</a></li>
            <li><a href="#contact">Contact</a></li>
          </ul>
        </div>
      </nav>
    </header>

    <main>
      <slot />
    </main>

    <footer>
      <div class="footer-content">
        <p>&copy; Built with <a href="https://astro.build">Astro</a>.</p>
      </div>
    </footer>

    <style>
      /* Import global styles */
      @import '../styles/global.css';
    </style>

    <!-- Mobile Menu JavaScript -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const mobileToggle = document.querySelector('.mobile-menu-toggle');
        const mobileNav = document.querySelector('.nav-links');
        
        if (mobileToggle && mobileNav) {
          mobileToggle.addEventListener('click', function() {
            const isOpen = mobileNav.classList.contains('mobile-menu-open');
            
            if (isOpen) {
              mobileNav.classList.remove('mobile-menu-open');
              mobileToggle.setAttribute('aria-expanded', 'false');
            } else {
              mobileNav.classList.add('mobile-menu-open');
              mobileToggle.setAttribute('aria-expanded', 'true');
            }
          });

          const navLinks = mobileNav.querySelectorAll('a');
          navLinks.forEach(link => {
            link.addEventListener('click', function() {
              if (window.getComputedStyle(mobileToggle).display !== 'none') {
                mobileNav.classList.remove('mobile-menu-open');
                mobileToggle.setAttribute('aria-expanded', 'false');
              }
            });
          });

          document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && mobileNav.classList.contains('mobile-menu-open')) {
              mobileNav.classList.remove('mobile-menu-open');
              mobileToggle.setAttribute('aria-expanded', 'false');
              mobileToggle.focus();
            }
          });

          window.addEventListener('resize', function() {
            if (window.innerWidth > 768 && mobileNav.classList.contains('mobile-menu-open')) {
              mobileNav.classList.remove('mobile-menu-open');
              mobileToggle.setAttribute('aria-expanded', 'false');
            }
          });
        }
      });
    </script>
  </body>
</html>